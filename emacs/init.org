#+title: Emacs Config
#+PROPERTY: header-args :tangle init.el
#+STARTUP: overview
#+auto_tangle: t

;; My config, made using this blog post: https://systemcrafters.net/emacs-from-scratch/basics-of-emacs-configuration/
;; TODO: make as a tangled org file.
;; TODO: org mode / roam2 / journal / noter / pretty.
;; TODO: multiline package.
;; TODO: beacon mode.
;; TODO: beacon mode
;; TODO: elegant emacs.

* TABLE OF CONTENT :toc:
* Packages

Setup packages.

#+begin_src elisp
  ;; Install melpa for packages.
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)

  ;; load 'use-package' package, funny.
  (eval-when-compile
    ;; Following line is not needed if use-package.el is in ~/.emacs.d
    ;; (add-to-list 'load-path "<path where use-package is installed>")
    (require 'use-package))
#+end_src

* UI customization

Emacs variable customization for the UI.

#+begin_src elisp
  (setq inhibit-startup-message t		; Don't show the splash screen.
	visible-bell t)			; Blinks when reaching end or start of buffer.
  (menu-bar-mode -1)			; Remove menu bar
  (tool-bar-mode -1)			; Remove tool bar
  (scroll-bar-mode -1)			; Remove scroll bar
  (show-paren-mode 1)			; Show matching parens.
  (hl-line-mode 1)			; Highlight the selected line.
  (blink-cursor-mode -1)			; Prevent the cursor from blinking.
  (global-display-line-numbers-mode 1)	; Shoe line numbers in every buffer.
#+end_src

* Theme

#+begin_src elisp
  (load-theme 'modus-vivendi t)
#+end_src

* Backups

Set backup files into .emacs_saves.

#+begin_src elisp
  (setq backup-directory-alist '(("." . "~/.emacs.saves")))
#+end_src

* Rainbow delimiters

Matching parens have colors.

#+begin_src elisp
  (require 'rainbow-delimiters)
  (add-hook 'prog-mode-hook 'rainbow-delimiters-mode)
#+end_src

* Highligh TODO

#+begin_src elisp
  (setq hl-todo-keyword-faces
	'(("TODO"   . "#FF0000")
	    ("FIXME"  . "#FF0000")
	    ("DEBUG"  . "#A020F0")
	    ("GOTCHA" . "#FF4500")
	    ("STUB"   . "#1E90FF")))
#+end_src

* Org
** Setup

#+begin_src elisp
  (setq
    org-directory "~/org/"
    org-log-into-drawer t
    org-agenda-files '("~/org/")
    org-log-done 'time)

  ;; Register new templates here.
  (setq org-capture-templates
      '(
        ("t" "simple todo" entry (file+headline "~/org/todo.org" "Tasks")
         "* TODO %?\n  %i\n")

        ("a" "tracked todo" entry (file+headline "~/org/todo.org" "Tasks")
         "* TODO %?\n  %i\n  %a")

        ("i" "simple idea" entry (file+headline "~/org/idea.org" "Ideas")
         "* IDEA %?\n  %i\n")

        ("j" "journal entry" entry (file+datetree "~/org/journal.org")
         "* %?\nEntered on %U\n  %i\n  %a")))
#+end_src

** Auto tangle

Transform org source blocks into the associated source file.
Used to transform org config into elisp files.

#+begin_src elisp
  ;; Tangle org files on save.
  (require 'org-auto-tangle)
  (add-hook 'org-mode-hook 'org-auto-tangle-mode)
#+end_src

** Journal

An addon for journaling using org mode

#+begin_src elisp
(setq
 org-journal-dir "~/org/journal/"
 org-journal-date-prefix "#+TITLE:"     ; Org-mode style header.
 org-journal-time-prefix "* "           ; Entries for the day are now top-level headers.
 org-journal-file-format "%Y%m%d.org")  ; Make all journal entries org-mode.
#+end_src

** Roam

Backlinks following the [[https://www.orgroam.com/manual.html#A-Brief-Introduction-to-the-Zettelkasten-Method][Zettelkasten Method]].
Checkout the [[https://www.orgroam.com/manual.html#Setting-up-Org_002droam][org mode manual]] for more information.

#+begin_src elisp
(setq org-roam-directory (file-truename "~/org/knowledge")) ; file-truname is used to resolve symlimks, just in case.
(org-roam-db-autosync-mode)
#+end_src
